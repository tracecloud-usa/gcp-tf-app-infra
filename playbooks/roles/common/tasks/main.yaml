---
- name: Check if the user '{{ username }}' exists
  ansible.builtin.getent:
    database: passwd
    key: '{{ username }}'
  register: new_user
  changed_when: false

- name: Skip remaining tasks if '{{ username }}' user exists
  ansible.builtin.debug:
    msg: "User '{{ username }}' already exists. Skipping other tasks."
  when: new_user is not none and new_user | length > 0

- name: Create the '{{ username }}' user
  ansible.builtin.user:
    name: '{{ username }}'
    state: present
  when: new_user is none or new_user | length == 0

- name: Add '{{ username }}' user to sudoers
  ansible.builtin.copy:
    dest: /etc/sudoers.d/'{{ username }}'
    content: "'{{ username }}' ALL=(ALL) NOPASSWD:ALL"
    mode: '0440'
  when: new_user is none or new_user | length == 0

- name: Add SSH public key to '{{ username }}' authorized keys
  ansible.builtin.authorized_key:
    user: '{{ username }}'
    key: "{{ lookup('file', '{{ ssh_pubkey }}') }}"
    state: present
  when: new_user is none or new_user | length == 0

- name: Set ownership and permissions for '{{ username }}' home directory
  ansible.builtin.file:
    path: /home/'{{ username }}'
    owner: '{{ username }}'
    group: '{{ username }}'
    mode: '0755'
    state: directory
  when: new_user is none or new_user | length == 0

- name: Check if PasswordAuthentication is set to no in the custom SSH config
  ansible.builtin.shell: grep -E '^\s*PasswordAuthentication\s+no' /etc/ssh/sshd_config.d/60-cloudimg-settings.conf
  register: sshd_config_check
  ignore_errors: yes

- name: Ensure PasswordAuthentication is disabled
  ansible.builtin.debug:
    msg: "Password-based SSH is disabled on {{ inventory_hostname }}."
  when: sshd_config_check.rc == 0

- name: Create a file to disable password-based SSH if not found
  ansible.builtin.copy:
    dest: /etc/ssh/sshd_config.d/99-no-password-ssh.conf
    content: |
      # Disables password-based SSH authentication
      PasswordAuthentication no
    owner: root
    group: root
    mode: '0644'
  when: sshd_config_check.rc != 0
  notify:
    - Restart SSH
