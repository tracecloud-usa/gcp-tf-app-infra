---
- name: Deploy the website
  hosts: all
  become: yes
  gather_facts: yes


  vars:
    ansible_user: trace
    site: '{{ domain }}'
    web_root: "/var/www/{{ site }}"
    remote_nginx_sites_available: '/etc/nginx/sites-available/{{ site }}.conf'
    remote_nginx_sites_enabled: '/etc/nginx/sites-enabled/{{ site }}.conf'
    pages: '{{ website_files }}'

  tasks:
    - name: Ensure necessary directories exist
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "{{ web_root }}"
        - /etc/nginx/sites-available
        - /etc/nginx/sites-enabled

    - name: Copy website files
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/files/{{ item }}"
        dest: "{{ web_root }}/{{ item }}"
      loop: "{{ pages }}"

    - name: Update ownership and permissions for www-data
      ansible.builtin.file:
        path: "{{ web_root }}"
        owner: www-data
        group: www-data
        mode: '0755'
        recurse: yes

    - name: Deploy pre-built Nginx configuration
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/sites/{{ site }}.conf"
        dest: "{{ remote_nginx_sites_available }}"
        owner: root
        group: root
        mode: '0644'

    - name: Create symbolic link to sites-enabled
      ansible.builtin.file:
        src: "{{ remote_nginx_sites_available }}"
        dest: "{{ remote_nginx_sites_enabled }}"
        state: link

    - name: Reload Nginx to apply the new configuration
      ansible.builtin.service:
        name: nginx
        state: reloaded
